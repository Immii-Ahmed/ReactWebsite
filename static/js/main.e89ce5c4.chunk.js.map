{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/Alert.js","Components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","styleMy","myStyleChange","btnStyle","btnChangeStyle","className","style","id","type","onClick","Navbar","props","mode","href","title","to","Home","contact","number","placeholder","toggleMode","role","htmlFor","textChange","defaultProps","Alert","AlertMessage","Type","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Textform","text","setText","forhtml","mode2","onChange","event","target","value","rows","btn2","NewText","ShowAlert","split","length","App","setmode","setmode2","setTextChange","setBtn2","settext","setAlertMessage","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e89ce5c4.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nexport default function About() {\r\n\r\n    // changing state of content and styling the components\r\n    const [styleMy, myStyleChange] = useState( {\r\n        color: 'black',\r\n        backgroundColor : \"white\"\r\n    })\r\n\r\n    // second useState for buttons to change their state according to conditions\r\n    const [btnStyle, btnChangeStyle] = useState(\"Enable Dark Mode\")\r\n\r\n\r\n    // Creating DarkMode function for their functionalities on onClick event \r\n    const DarkMode=()=>{\r\n       if (styleMy.color === 'black'){\r\n        // changing state with myStyleChange variable \r\n      myStyleChange({\r\n          color:'White',\r\n          backgroundColor:'black'\r\n      })\r\n\r\n    //   for changing inner content of button \r\n      btnChangeStyle(\"Enable Light Mode\");\r\n    }\r\n        else{\r\n            myStyleChange({\r\n                color:'black',\r\n                backgroundColor:'white'\r\n            })\r\n            btnChangeStyle(\"Enable Dark Mode\");\r\n    }\r\n}\r\n    return (\r\n        <div className=\"container\" style={styleMy}>\r\n            <h3>About Us</h3>\r\n                        <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" style={styleMy} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    About Our Terms\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={styleMy}>\r\n                    <strong>This section defines our terms and conditions.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables<code> ReactJs Toturials Self Learning</code>.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" style={styleMy} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                About Our Services\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={styleMy}>\r\n                    <strong>This section explaining our services.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables<code> ReactJs Toturials Self Learning</code>.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" style={styleMy} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                About Our Company\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={styleMy}>\r\n                    <strong>It Defines our company.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element<code> ReactJs Toturials</code>.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2 my-4\" onClick={DarkMode}>{btnStyle}</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                {props.Home}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to=\"/about\">\r\n                {props.contact}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                {props.number}%\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className={`btn btn-outline-${props.mode===\"dark\"?\"light\":\"dark\"}`} type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n      <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"} mx-3`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >{props.textChange}</label>\r\n      </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// it defines what type of props should be accessed and use in Ui or properties\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contact: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\n// defaultProps used for to display by default properties of the compenent\r\nNavbar.defaultProps = {\r\n  title: \"Immii Tech\",\r\n  contact: \"Contact Us\",\r\n};\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n\r\n    // creating function for capitalized the first letter \r\nconst capitalize =(word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n}\r\n  return (\r\n    props.AlertMessage &&<div className={`alert alert-${props.AlertMessage.Type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.AlertMessage.Type)}</strong> : {props.AlertMessage.msg}\r\n  </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Alert;\r\n","// improting react from react and importing useSate hook from react \r\n// state concept in this file learned\r\nimport React,{useState} from \"react\";\r\n// import PropTypes from \"prop-types\"\r\n\r\n// rfc => react function based component \r\nexport default function Textform(props) {\r\n    const HandleUpperClick = ()=> {\r\n        // console.log(\"button is clicking\"  + text);\r\n        const NewText = text.toUpperCase();\r\n        setText(NewText);\r\n        props.ShowAlert(\"Changed to capital letters\",\"success\")\r\n    }\r\n\r\n    // lower case handler \r\n    const HandleLowerClick =()=>{\r\n      const NewText = text.toLowerCase();\r\n      setText(NewText);\r\n      props.ShowAlert(\"Changed to small letters\",\"success\")\r\n    }\r\n\r\n    // Remove/Clear function \r\n    const HandleRemoveClick=()=>{\r\n      const NewText = \"\";\r\n      setText (NewText);\r\n      props.ShowAlert(\"Text removed\",\"success\")\r\n    }\r\n    const handleOnChange = (event)=> {\r\n        // console.log(\"OnChange is clicking\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // text defines the default value of text and settext defines the new value of the text \r\n    // const [text, setText] = useState(\"hello\");\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n      <>\r\n          <div>\r\n            <div className={`mb-3 text-${props.text}`}>\r\n              <label forhtml=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n                <h2>Write Your Sentence or Try Practice</h2>\r\n              </label>\r\n              <textarea\r\n                className={`form-control text-${props.text} bg-${props.mode2}`} onChange={handleOnChange}\r\n                id=\"exampleFormControlTextarea1\" value={text}\r\n                rows=\"8\"></textarea>\r\n            </div>\r\n            <button className={`btn btn-${[props.btn2]} mx-2`} onClick={HandleUpperClick}>Change to Uppercase</button>\r\n            <button className={`btn btn-${[props.btn2]} mx-2`} onClick={HandleLowerClick}>Change to Lowercase</button>\r\n            <button className={`btn btn-${[props.btn2]} mx-2`} onClick={HandleRemoveClick}>Remove Text</button>\r\n          </div>\r\n          <div className={`container my-3 text-${props.text}`}>\r\n            <h1>Summary of text</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} Letters</p>\r\n            <h3>Minutes Required To Read</h3>\r\n            <p>{0.008 * text.split(\"\").length}</p>\r\n            <h3>{props.mode}Preview</h3>\r\n            <p>{text.length>0 ? text : \"Enter something above to preview it\"}</p>\r\n          </div>\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Alert from './Components/Alert';\nimport Textform from './Components/Textform';\nimport React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  // setting light and dark mode to the navbar \n  const  [mode, setmode] = useState('dark');\n  const  [mode2, setmode2] = useState('white');\n  const  [textChange, setTextChange] = useState('Enable Dark Mode');\n\n  // changing buttons color \n  const  [btn2, setBtn2] = useState('dark');\n\n  // changing text color \n  const  [text, settext] = useState('dark');\n\n  // creating state for changing alert \n  const [AlertMessage, setAlertMessage] = useState(null);\n\n  // creating object for alert through method \n  const ShowAlert = (message, Type)=>{\n    setAlertMessage({\n      msg: message,\n      Type: Type\n    })\n    setTimeout(() => {\n      setAlertMessage(null)\n    }, 3000);\n\n  }\n\n  const toggleMode =()=>{\n          if(mode===\"light\"){\n            setmode(\"dark\")\n            document.body.style.backgroundColor = \"white\";\n            document.title = \"light mode Enable\";\n            setTextChange(\"Enable Dark Mode\")\n            ShowAlert(\"Enabled light mode\",\"success\")\n          }\n          else{\n            setmode(\"light\")\n            document.body.style.backgroundColor =\"black\";\n            document.title = \"Dark mode Enable\";\n            setTextChange(\"Enable Light Mode\")\n            ShowAlert(\"Enabled dark mode\",\"success\")\n\n            // used for blinking any message on the title, page etc \n            // setInterval(() => {\n            //   document.title =\"install this app\";\n            // }, 2000);\n            // setInterval(() => {\n            //   document.title =\"install now\";\n            // }, 1500);\n          }\n          if(mode2===\"white\"){\n            setmode2(\"black\")\n          }\n          else{\n            setmode2(\"white\")\n          }\n          if(btn2===\"dark\"){\n            setBtn2(\"light\")\n          }\n          else{\n            setBtn2(\"dark\")\n          }\n          if(text===\"dark\"){\n            settext(\"white\")\n          }\n          else{\n            settext(\"dark\")\n          }\n  }\n\n  return (\n\n  <>\n  <Router>\n    <Navbar title=\"ImranWeb\" Home=\"Home\" contact=\"Contact Us\" mode={mode} toggleMode={toggleMode} number={67} textChange={textChange}/>\n    {/* <div className=\"container my-4\">\n        <About />\n    </div> */}\n\n    <Alert AlertMessage={AlertMessage}/>\n    \n    <div className=\"container my-4\">\n    <Switch>\n          <Route exact path=\"/About\">\n            <About />\n          </Route>\n          // <Route exact path=\"/\">\n      <Textform  btn2={btn2} text={text} mode2={mode2} ShowAlert={ShowAlert}/>\n          </Route>\n        </Switch>\n    </div>\n    </Router>\n  </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}